local monarch = require "monarch.monarch"
local url = require "utils.url"
local tracking_id = require "utils.tracking_id"
local gooey = require "gooey.gooey"
local flow = require "utils.flow"
local version = require "screens.popups.version_dialog.version"
local gooey_buttons = require "utils.gooey_buttons"
local log = require "utils.log"

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post(url.MENU, "hide")
	gui.set_text(gui.get_node("version"), "Version: " .. sys.get_config("project.version"))
	gui.set_text(gui.get_node("version_android"), "Version: " .. sys.get_config("project.version"))
	self.lock = true
	timer.delay(0.1, false, function() self.lock = false end)

	self.sysinfo = sys.get_sys_info()

	if self.sysinfo.system_name == "Android" then
		gui.set_enabled(gui.get_node("version"), false)
	else
		gui.set_enabled(gui.get_node("version_btn"), false)
	end
end

function on_input(self, action_id, action)
	local b = gooey.button("support_me", action_id, action, function()
		sys.open_url("https://Ko-fi.com/jerakin")
	end)
	local a = gooey.button("version_btn", action_id, action, function()
		flow.start(function()
			local up_to_date, versions_behind, url = version.check_version()
			if up_to_date ~= nil then
				monarch.show("version", {}, {up_to_date=up_to_date, versions_behind=versions_behind, url=url})
			else
				log.info("Version got nil")
			end
		end, function(b) gooey_buttons.common_button(b, gui.get_node("version_android")) end)
		
	end)
	if not b.over and not a.over and not self.lock and action_id == hash("touch") and action.released then
		gameanalytics.addDesignEvent {
			eventId = "Navigation:Back",
			value = tracking_id[monarch.top()]
		}
		monarch.back()
	end
end